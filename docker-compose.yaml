version: '3'

# This docker-compose is for developer convenience, not for running in production.

services:

  # For running the python consumers
  app:
    build:
      context: .
      args:
        DEVELOPMENT: 1
    network_mode: host
    depends_on:
      - arangodb
      - kafka
      - elasticsearch
      - re_api
    ports:
      - "127.0.0.1:5000:5000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}:/app
      - ${PWD}/scratch:/scratch
    env_file: 
      - tests/test.env
      - .env

  kafka:
    image: confluentinc/cp-kafka:5.0.0
    ports:
      - "127.0.0.1:9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: -Xmx512m -Xms512m
    logging: {driver: none}

  # Required for kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "127.0.0.1:2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:12888:13888
    logging: {driver: none}

  elasticsearch:
    image: elasticsearch:7.5.0
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"
    logging: {driver: none}

  # Relation Engine API
  re_api:
    image: kbase/relation_engine_api:0.0.10
    ports:
      - "127.0.0.1:5001:5000"
    environment:
      - WORKERS=2
      - KBASE_AUTH_URL=https://ci.kbase.us/services/auth/
      - KBASE_WORKSPACE_URL=https://ci.kbase.us/services/ws/
      - PYTHONUNBUFFERED=true
      - DB_URL=http://arangodb:8529
      - DB_USER=root
      - DEVELOPMENT=1
      - FLASK_ENV=development
      - FLASK_DEBUG=1

  # Arangodb server in cluster mode
  arangodb:
    image: arangodb:3.5
    ports:
      - "127.0.0.1:8529:8529"  # API
      - "127.0.0.1:8530:8530"  # dashboard
    command: sh -c "arangodb --starter.local"
    logging: {driver: none}
